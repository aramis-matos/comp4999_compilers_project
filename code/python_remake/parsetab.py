
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'sASIGNACION COMO COR_DER COR_IZQ DEFINA ELEMENTO_QUIMICO ENLACE FIN FIN_DE_LINEA GRAFICAR2D GRAFICAR3D ID INICIO MODELO OPERACION PARENTESIS_DER PARENTESIS_IZQ PESOMOLECULAR TIPO VALENCIAs : INICIO sentencias FINsentencias : sentencia FIN_DE_LINEA sentencias\n                  | sentencia FIN_DE_LINEAsentencia : DEFINA ID COMO TIPO\n                  | ID ASIGNACION modelo_molecular\n                  | OPERACION PARENTESIS_IZQ ID PARENTESIS_DERmodelo_molecular : ELEMENTO_QUIMICO\n                        | ELEMENTO_QUIMICO VALENCIA\n                        | elemento grupo_funcional\n                        | compuesto elemento\n                        | compuesto elemento grupo_funcional\n                        | compuesto compuesto compuestoscompuesto : ELEMENTO_QUIMICO\n                 | ELEMENTO_QUIMICO VALENCIA\n                 | elemento grupo_funcional\n                 | elemento grupo_funcional ENLACE\n                 | elemento ENLACEcompuestos : compuesto compuestos\n                  | compuestoelemento : ELEMENTO_QUIMICO\n                | ELEMENTO_QUIMICO VALENCIAgrupo_funcional : grupo_funcional_inferior grupo_funcional_superior\n                       | grupo_funcional_superior grupo_funcional_inferior\n                       | PARENTESIS_IZQ modelo_grupo_funcional PARENTESIS_DER\n                       | COR_IZQ modelo_grupo_funcional COR_DERgrupo_funcional_inferior : COR_IZQ modelo_grupo_funcional COR_DERgrupo_funcional_superior : PARENTESIS_IZQ modelo_grupo_funcional PARENTESIS_DERmodelo_grupo_funcional : ENLACE modelo_molecular\n                              | ELEMENTO_QUIMICO\n                              | ELEMENTO_QUIMICO VALENCIA\n                              | elemento grupo_funcional\n                              | compuesto elemento\n                              | compuesto elemento grupo_funcional\n                              | compuesto compuesto compuestos'
    
_lr_action_items = {'INICIO':([0,],[2,]),'$end':([1,8,],[0,-1,]),'DEFINA':([2,9,],[5,5,]),'ID':([2,5,9,12,],[6,10,6,19,]),'OPERACION':([2,9,],[7,7,]),'FIN':([3,9,13,],[8,-3,-2,]),'FIN_DE_LINEA':([4,15,16,20,21,22,23,29,30,31,32,33,35,43,44,45,47,48,51,57,58,59,60,61,62,],[9,-5,-7,-4,-8,-9,-17,-10,-20,-6,-16,-22,-23,-19,-12,-13,-11,-21,-24,-25,-18,-14,-15,-27,-26,]),'ASIGNACION':([6,],[11,]),'PARENTESIS_IZQ':([7,16,17,21,24,29,30,39,40,45,46,48,53,56,57,59,],[12,-20,26,-21,34,26,-20,-20,26,-20,26,-21,-21,26,-26,-21,]),'COMO':([10,],[14,]),'ELEMENTO_QUIMICO':([11,16,18,21,22,23,26,27,28,30,32,33,34,35,36,38,39,41,43,45,47,48,51,53,54,55,57,59,60,61,62,64,],[16,-13,30,-14,-15,-17,39,39,45,-13,-16,-22,39,-23,39,16,-13,30,45,-13,-15,-14,-24,-14,-15,45,-25,-14,-15,-27,-26,-15,]),'TIPO':([14,],[20,]),'PARENTESIS_DER':([16,19,21,22,23,29,30,32,33,35,37,39,43,44,45,47,48,49,51,52,53,54,56,57,58,59,60,61,62,63,64,],[-7,31,-8,-9,-17,-10,-20,-16,-22,-23,51,-29,-19,-12,-13,-11,-21,61,-24,-28,-30,-31,-32,-25,-18,-14,-15,-27,-26,-34,-33,]),'COR_DER':([16,21,22,23,29,30,32,33,35,39,42,43,44,45,47,48,50,51,52,53,54,56,57,58,59,60,61,62,63,64,],[-7,-8,-9,-17,-10,-20,-16,-22,-23,-29,57,-19,-12,-13,-11,-21,62,-24,-28,-30,-31,-32,-25,-18,-14,-15,-27,-26,-34,-33,]),'VALENCIA':([16,30,39,45,],[21,48,53,59,]),'ENLACE':([16,17,21,22,26,27,29,30,33,34,35,36,39,40,45,46,47,48,51,53,54,56,57,59,60,61,62,64,],[-20,23,-21,32,38,38,23,-20,-22,38,-23,38,-20,23,-20,23,32,-21,-24,-21,32,23,-25,-21,32,-27,-26,32,]),'COR_IZQ':([16,17,21,25,29,30,39,40,45,46,48,51,53,56,59,],[-20,27,-21,36,27,-20,-20,27,-20,27,-21,-27,-21,27,-21,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'s':([0,],[1,]),'sentencias':([2,9,],[3,13,]),'sentencia':([2,9,],[4,4,]),'modelo_molecular':([11,38,],[15,52,]),'elemento':([11,18,26,27,28,34,36,38,41,43,55,],[17,29,40,40,46,40,40,17,56,46,46,]),'compuesto':([11,18,26,27,28,34,36,38,41,43,55,],[18,28,41,41,43,41,41,18,55,43,43,]),'grupo_funcional':([17,29,40,46,56,],[22,47,54,60,64,]),'grupo_funcional_inferior':([17,25,29,40,46,56,],[24,35,24,24,24,24,]),'grupo_funcional_superior':([17,24,29,40,46,56,],[25,33,25,25,25,25,]),'modelo_grupo_funcional':([26,27,34,36,],[37,42,49,50,]),'compuestos':([28,43,55,],[44,58,63,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> s","S'",1,None,None,None),
  ('s -> INICIO sentencias FIN','s',3,'p_s','parser.py',8),
  ('sentencias -> sentencia FIN_DE_LINEA sentencias','sentencias',3,'p_sentencias','parser.py',14),
  ('sentencias -> sentencia FIN_DE_LINEA','sentencias',2,'p_sentencias','parser.py',15),
  ('sentencia -> DEFINA ID COMO TIPO','sentencia',4,'p_sentencia','parser.py',24),
  ('sentencia -> ID ASIGNACION modelo_molecular','sentencia',3,'p_sentencia','parser.py',25),
  ('sentencia -> OPERACION PARENTESIS_IZQ ID PARENTESIS_DER','sentencia',4,'p_sentencia','parser.py',26),
  ('modelo_molecular -> ELEMENTO_QUIMICO','modelo_molecular',1,'p_modelo_molecular','parser.py',31),
  ('modelo_molecular -> ELEMENTO_QUIMICO VALENCIA','modelo_molecular',2,'p_modelo_molecular','parser.py',32),
  ('modelo_molecular -> elemento grupo_funcional','modelo_molecular',2,'p_modelo_molecular','parser.py',33),
  ('modelo_molecular -> compuesto elemento','modelo_molecular',2,'p_modelo_molecular','parser.py',34),
  ('modelo_molecular -> compuesto elemento grupo_funcional','modelo_molecular',3,'p_modelo_molecular','parser.py',35),
  ('modelo_molecular -> compuesto compuesto compuestos','modelo_molecular',3,'p_modelo_molecular','parser.py',36),
  ('compuesto -> ELEMENTO_QUIMICO','compuesto',1,'p_compuesto','parser.py',41),
  ('compuesto -> ELEMENTO_QUIMICO VALENCIA','compuesto',2,'p_compuesto','parser.py',42),
  ('compuesto -> elemento grupo_funcional','compuesto',2,'p_compuesto','parser.py',43),
  ('compuesto -> elemento grupo_funcional ENLACE','compuesto',3,'p_compuesto','parser.py',44),
  ('compuesto -> elemento ENLACE','compuesto',2,'p_compuesto','parser.py',45),
  ('compuestos -> compuesto compuestos','compuestos',2,'p_compuestos','parser.py',50),
  ('compuestos -> compuesto','compuestos',1,'p_compuestos','parser.py',51),
  ('elemento -> ELEMENTO_QUIMICO','elemento',1,'p_elemento','parser.py',56),
  ('elemento -> ELEMENTO_QUIMICO VALENCIA','elemento',2,'p_elemento','parser.py',57),
  ('grupo_funcional -> grupo_funcional_inferior grupo_funcional_superior','grupo_funcional',2,'p_grupo_funcional','parser.py',62),
  ('grupo_funcional -> grupo_funcional_superior grupo_funcional_inferior','grupo_funcional',2,'p_grupo_funcional','parser.py',63),
  ('grupo_funcional -> PARENTESIS_IZQ modelo_grupo_funcional PARENTESIS_DER','grupo_funcional',3,'p_grupo_funcional','parser.py',64),
  ('grupo_funcional -> COR_IZQ modelo_grupo_funcional COR_DER','grupo_funcional',3,'p_grupo_funcional','parser.py',65),
  ('grupo_funcional_inferior -> COR_IZQ modelo_grupo_funcional COR_DER','grupo_funcional_inferior',3,'p_grupo_funcional_inferior','parser.py',70),
  ('grupo_funcional_superior -> PARENTESIS_IZQ modelo_grupo_funcional PARENTESIS_DER','grupo_funcional_superior',3,'p_grupo_funcional_superior','parser.py',75),
  ('modelo_grupo_funcional -> ENLACE modelo_molecular','modelo_grupo_funcional',2,'p_modelo_grupo_funcional','parser.py',80),
  ('modelo_grupo_funcional -> ELEMENTO_QUIMICO','modelo_grupo_funcional',1,'p_modelo_grupo_funcional','parser.py',81),
  ('modelo_grupo_funcional -> ELEMENTO_QUIMICO VALENCIA','modelo_grupo_funcional',2,'p_modelo_grupo_funcional','parser.py',82),
  ('modelo_grupo_funcional -> elemento grupo_funcional','modelo_grupo_funcional',2,'p_modelo_grupo_funcional','parser.py',83),
  ('modelo_grupo_funcional -> compuesto elemento','modelo_grupo_funcional',2,'p_modelo_grupo_funcional','parser.py',84),
  ('modelo_grupo_funcional -> compuesto elemento grupo_funcional','modelo_grupo_funcional',3,'p_modelo_grupo_funcional','parser.py',85),
  ('modelo_grupo_funcional -> compuesto compuesto compuestos','modelo_grupo_funcional',3,'p_modelo_grupo_funcional','parser.py',86),
]
